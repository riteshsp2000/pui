{
  // Place your p-ui workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "React Function Component": {
    "prefix": ["rfcp", "rfpc"],
    "body": [
      "import React from 'react';",
      "",
      "import { I${TM_DIRECTORY/.*\\/(.*)$/$1/g} } from './${TM_DIRECTORY/.*\\/(.*)$/$1/g}.types';",
      "",
      "const ${TM_DIRECTORY/.*\\/(.*)$/$1/g}: React.FC<I${TM_DIRECTORY/.*\\/(.*)$/$1/g}> = () => {",
      "  return (",
      "    ${0}<div>",
      "      <h1>HelloWorld</h1>",
      "    </div>",
      "  )",
      "};",
      "",
      "export type ${TM_DIRECTORY/.*\\/(.*)$/$1/g}Props = I${TM_DIRECTORY/.*\\/(.*)$/$1/g};",
      "export default ${TM_DIRECTORY/.*\\/(.*)$/$1/g};"
    ],
    "description": "Creates the snippet for a component",
    "scope": "typescript,typescriptreact"
  },
  "React Function Component Without Props": {
    "prefix": ["rfcwp", "rfcpw", "rfpwc", "rfpcw", "rfwpc", "rfwcp"],
    "body": [
      "import React from 'react';",
      "",
      "const ${TM_DIRECTORY/.*\\/(.*)$/$1/g} = () => {",
      "  return (",
      "    ${0}<div>",
      "      <h1>HelloWorld</h1>",
      "    </div>",
      "  )",
      "};",
      "",
      "export default ${TM_DIRECTORY/.*\\/(.*)$/$1/g};"
    ],
    "description": "Creates the snippet for a component",
    "scope": "typescript,typescriptreact"
  },
  "React Functional Component Prop Types": {
    "prefix": ["rfct", "rftc"],
    "body": ["export interface I${TM_DIRECTORY/.*\\/(.*)$/$1/g} {", "  ${0}", "};"],
    "description": "Creates the snippet for the prop types of a component",
    "isFileTemplate": true,
    "scope": "typescript,typescriptreact"
  },
  "React Functional Component Storybook": {
    "prefix": ["rfcs", "rfsc"],
    "body": [
      "import React from 'react';",
      "import {",
      "  ComponentMeta,",
      "  ComponentStory",
      "} from '@storybook/react';",
      "",
      "import ${TM_DIRECTORY/.*\\/(.*)$/$1/g} from './${TM_DIRECTORY/.*\\/(.*)$/$1/g}';",
      "",
      "export default {",
      "  title: '${1}/${TM_DIRECTORY/.*\\/(.*)$/$1/g}',",
      "  component: ${TM_DIRECTORY/.*\\/(.*)$/$1/g},",
      "} as ComponentMeta <typeof ${TM_DIRECTORY/.*\\/(.*)$/$1/g}>;",
      "",
      "const Template: ComponentStory<typeof ${TM_DIRECTORY/.*\\/(.*)$/$1/g}> = (args) => <${TM_DIRECTORY/.*\\/(.*)$/$1/g} {...args} />",
      "",
      "export const Default = Template.bind({});",
      "Default.args = {${0}};"
    ],
    "description": "Creates the snippet for the storybook of a component",
    "isFileTemplate": true,
    "scope": "typescript,typescriptreact"
  },
  "React Functional Component Index": {
    "prefix": ["rfci", "rfic"],
    "body": [
      "export {default} from './${TM_DIRECTORY/.*\\/(.*)$/$1/g}';",
      "export * from './${TM_DIRECTORY/.*\\/(.*)$/$1/g}';"
    ]
  }
}
